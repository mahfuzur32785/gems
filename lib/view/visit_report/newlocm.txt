public static function haversineFormula($locations, $userLatitude, $userLongitude, $maxDistance = 25)
    {
        $nearestLocations = $locations->filter(function ($union) use ($userLatitude, $userLongitude, $maxDistance) {
            $earthRadius = 6371000; // Earth radius in meters

            $lat1 = deg2rad($userLatitude);
            $lon1 = deg2rad($userLongitude);
            $lat2 = deg2rad($union->latitude);
            $lon2 = deg2rad($union->longitude);

            $dlat = $lat2 - $lat1;
            $dlon = $lon2 - $lon1;
            // use Haversine formula to calculate distance between two points
            $a = sin($dlat / 2)  sin($dlat / 2) + cos($lat1)  cos($lat2)  sin($dlon / 2)  sin($dlon / 2);
            $c = 2 * atan2(sqrt($a), sqrt(1 - $a));
            $distance = $earthRadius * $c;
            $union['distance'] = $distance;
            return $distance <= $maxDistance;
        });
        return $nearestLocations;
    }

    public function newLocation(Request $request)
    {

        $distance = LocationSetting::where('name', 'General Location')->first();
        $userLatitude = $request->input('latitude');
        $userLongitude = $request->input('longitude');
        $maxDistance = $distance->distance; //  Set the maximum distance in meters
        $locations = Location::with('officeType:id,name', 'division:id,name_en', 'district:id,name_en', 'upazila:id,name_en', 'union:id,name_en')
            ->get();
        $nearestLocations = LocationService::haversineFormula($locations, $userLatitude, $userLongitude, $maxDistance);



        $nearestLocations = $nearestLocations->sortBy('distance');
        $countByOfficeType = [];
        foreach ($nearestLocations as $location) {
            $officeType = $location->office_type_id;
            if (!isset($countByOfficeType[$officeType])) {
                $countByOfficeType[$officeType] = 1;
            } else {
                $countByOfficeType[$officeType]++;
            }
        }
        foreach ($nearestLocations as $location) {
            $location['type_counts'] = $countByOfficeType;
        }
        // return $nearestLocations;


        if ($nearestLocations->count() > 0) {

            return response()->json([
                'data' => new LocationResource($nearestLocations),
                'status' => 200,

            ], 200);
        } else {
            return response()->json([
                'status' => 200,
                'message' => 'no data available'

            ], 200);
        }
    }

    public function toArray(Request $request): array
    {

        return $this->map(function ($nearestLocations) {
            if ($nearestLocations->office_type_id == 4) {
                $officeCustomName = $nearestLocations->officeType->name . '(' . $nearestLocations->office_title . ')';
            } elseif ($nearestLocations->office_type_id == 3) {
                if ($nearestLocations->type_counts['UP Office']> 1) {
                    $officeCustomName = $nearestLocations->officeType->name . '(' . $nearestLocations->union->name_en . ')';
                } else {
                    $officeCustomName = $nearestLocations->officeType->name;
                }
            } elseif ($nearestLocations->office_type_id == 2) {
                if ($nearestLocations->type_counts['UNO Office'] > 1) {
                    $officeCustomName = $nearestLocations->officeType->name . '(' . $nearestLocations->upazila->name_en . ')';
                } else {
                    $officeCustomName = $nearestLocations->officeType->name;
                }
            } else {
                if ($nearestLocations->type_counts['DC/DDLG Office'] > 1) {
                    $officeCustomName = $nearestLocations->officeType->name . '(' . $nearestLocations->district->name_en . ')';
                } else {
                    $officeCustomName = $nearestLocations->officeType->name;
                }
            }

            return [
                'id' => $nearestLocations->id,
                'division_id' => $nearestLocations->division ? $nearestLocations->division->id : null,
                'division_name' => $nearestLocations->division ? $nearestLocations->division->name_en : null,
                'district_id' => $nearestLocations->district ? $nearestLocations->district->id : null,
                'district_name' => $nearestLocations->district ? $nearestLocations->district->name_en : null,
                'upazila_id' => $nearestLocations->upazila ? $nearestLocations->upazila->id : null,
                'upazila_name' => $nearestLocations->upazila ? $nearestLocations->upazila->name_en : null,
                'union_id' => $nearestLocations->union ? $nearestLocations->union->id : null,
                'union_name' => $nearestLocations->union ? $nearestLocations->union->name_en : null,
                'office_type_id' => $nearestLocations->office_type_id,
                'office_type_name' => $officeCustomName,
                'office_title' =>  $nearestLocations->office_title,
                'distance' =>  number_format($nearestLocations->distance, 4),
                'location_id' => $nearestLocations->id,

            ];
        })->all();
    }
